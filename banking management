#include<iostream>
#include<fstream>
#include<cstdlib>
#include<cstring> // Added for strcmp
using std::cout;
using std::cin;
using std::endl;
using std::fstream;
using std::ofstream;
using std::ifstream;
using std::ios;

class account_query {
private:
    char account_number[20];
    char firstName[10];
    char lastName[10];
    float total_Balance;
public:
    void read_data();
    void show_data();
    void write_rec();
    void read_rec();
    void search_rec();
    void edit_rec();
    void delete_rec();
};

void account_query::read_data() {
    cout << "Enter Account Number: ";
    cin >> account_number;
    cout << "Enter First Name: ";
    cin >> firstName;
    cout << "Enter Last Name: ";
    cin >> lastName;
    cout << "Enter Balance: ";
    cin >> total_Balance;
    cout << endl;
}

void account_query::show_data() {
    cout << "Account Number: " << account_number << endl;
    cout << "First Name: " << firstName << endl;
    cout << "Last Name: " << lastName << endl;
    cout << "Current Balance: Rs. " << total_Balance << endl;
    cout << "----------------------------------" << endl;
}

void account_query::write_rec() {
    ofstream outfile("record.bank", ios::binary | ios::app);
    if (!outfile) {
        cout << "Error in creating file!" << endl;
        return;
    }
    read_data();
    outfile.write(reinterpret_cast<char*>(this), sizeof(*this));
    outfile.close();
}

void account_query::read_rec() {
    ifstream infile("record.bank", ios::binary);
    if (!infile) {
        cout << "Error in Opening! File Not Found !!" << endl;
        return;
    }
    cout << "\n****Data from file****" << endl;
    while (infile.read(reinterpret_cast<char*>(this), sizeof(*this))) {
        show_data();
    }
    infile.close();
}

void account_query::search_rec() {
    ifstream infile("record.bank", ios::binary);
    if (!infile) {
        cout << "\nError in opening! File Not Found!!" << endl;
        return;
    }
    cout << "\nEnter Account Number to Search: ";
    char accNo[20];
    cin >> accNo;
    bool found = false;
    while (infile.read(reinterpret_cast<char*>(this), sizeof(*this))) {
        if (strcmp(account_number, accNo) == 0) {
            show_data();
            found = true;
            break;
        }
    }
    if (!found) cout << "\nRecord not found!" << endl;
    infile.close();
}

void account_query::edit_rec() {
    fstream file("record.bank", ios::in | ios::out | ios::binary);
    if (!file) {
        cout << "\nError in opening! File Not Found!!" << endl;
        return;
    }
    cout << "\nEnter Account Number to Modify: ";
    char accNo[20];
    cin >> accNo;
    bool found = false;
    while (file.read(reinterpret_cast<char*>(this), sizeof(*this))) {
        if (strcmp(account_number, accNo) == 0) {
            cout << "Existing Record:" << endl;
            show_data();
            cout << "\nEnter New Data:" << endl;
            read_data();
            file.seekp(-static_cast<int>(sizeof(*this)), ios::cur);
            file.write(reinterpret_cast<char*>(this), sizeof(*this));
            found = true;
            break;
        }
    }
    if (!found) cout << "\nRecord not found!" << endl;
    file.close();
}

void account_query::delete_rec() {
    ifstream infile("record.bank", ios::binary);
    if (!infile) {
        cout << "\nError in Opening! File Not Found !!" << endl;
        return;
    }
    ofstream tmpfile("tempfile.bank", ios::binary);
    cout << "\nEnter Account Number to Delete: ";
    char accNo[20];
    cin >> accNo;
    bool found = false;
    while (infile.read(reinterpret_cast<char*>(this), sizeof(*this))) {
        if (strcmp(account_number, accNo) == 0) {
            cout << "\nRecord Deleted Successfully!" << endl;
            found = true;
        } else {
            tmpfile.write(reinterpret_cast<char*>(this), sizeof(*this));
        }
    }
    infile.close();
    tmpfile.close();
    remove("record.bank");
    rename("tempfile.bank", "record.bank");
    if (!found) cout << "\nRecord not found!" << endl;
}
